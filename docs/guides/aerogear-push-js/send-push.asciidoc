---
layout: basic
title: Sending messages
---

== Sending messages

Now that we have the web application running and we have registered both for 'broadcast', 'foo' and 'mail' channels on the SimplePush server, it's time to send notifications. A bit earlier you received a _pushApplicationID_ and a _masterSecret_ after the successful registration of the Push Application. These IDâ€™s are used both for sending a broadcast and a selected send message to all registered SimplePush installations.

Let's start first by sending a 'broadcast' message. On a command line issue the following CURL command:

[source,c]
----
curl -u "{PushApplicationID}:{MasterSecret}"
   -v -H "Accept: application/json" -H "Content-type: application/json"
   -X POST
   -d '{
       "key":"value",
       "alert":"HELLO!",
       "sound":"default",
       "badge":7,
    
       "simple-push":"version=123"
     }'

http://localhost:8080/ag-push/rest/sender/broadcast
----

Notice the added _simple-push_ key in the payload together with the 'version' field. AeroGear UnifiedPush server will interpret that key and for all registered SimplePush installations under the PushApplication, it will perform an HTTP PUT update at the 'broadcast' endpoint on the SimplePush server. This will cause the SimplePush server to send the push notification to web clients.

You should now see the notification being received and being appended in the textarea

--screenshot of the app receiving the 'broadcast' notif--



Similar to the 'broadcast' message payload, the 'selected' message payload also contains the _simple-push_ key, this time with a list of comma-separated category names you assigned when you registered the Push Application installation. Further, the _deviceType_ filter key includes the 'web' value informing the UnifiedPush server to include simple-push installations when sending the notification.

[source,c]
----
curl -u "{PushApplicationID}:{MasterSecret}"
   -v -H "Accept: application/json" -H "Content-type: application/json"
   -X POST

   -d '{
      "category" : "someCategory",
      "alias" : ["user@account.com", "jay@redhat.org"],
      "deviceType" : ["iPad", "AndroidTablet", "web"],
      "message": {"key":"value", "key2":"other value", "alert":"HELLO!"},   
      "deviceType" : ["web"],
 
      "simple-push": { "foo":"version=123", "mail":"version=456"}
   }'

http://localhost:8080/ag-push/rest/sender/selected
----

You should see again the notificiation being received:

--screenshot of the app receiving the 'selected' notif--


As you realize, using a single-entry point the AeroGear UnifiedPush server, you can send notifications both to your mobile devices as well as to your web clients simultaneously with no extra cost or complex configurations. 
